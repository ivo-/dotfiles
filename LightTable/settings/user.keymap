;; User keymap
;; -----------------------------
;; Keymaps are stored as a set of diffs that are merged together together
;; to create the final set of keys. You can modify these diffs to either add
;; or subtract bindings.
;;
;; Like behaviors, keys are bound by tag. When objects with those tags are active
;; the key bindings are live. Keys can be bound to any number of Light Table commands,
;; allowing you the flexibility to execute multiple operations together. To see a list
;; of all the commands you can execute, start typing a word related to the thing you
;; want to do in between the square brackets (e.g. type "editor").
;;
;; Execute editor command:
;;
;;  "key" [(:editor.codemirror.command "cmd")]
;;
;; TODO: :tabs.close-others
;;

{:+ {:app {
           "alt-j i"       [:instarepl]
           "alt-j alt-i"   [:instarepl]
           "alt-j s c"     [:show-connect]
           "alt-j s p"     [:show-commandbar-transient]
           "alt-j s i"     [:dev-inspector]
           "alt-j alt-s c" [:show-connect]
           "alt-j alt-s i" [:dev-inspector]

           "alt-j w s"     [:workspace.show]
           "alt-j w f"     [:workspace.add-folder]
           "alt-j alt-w s" [:workspace.show]
           "alt-j alt-w f" [:workspace.add-folder]

           "alt-j c t"     [:console-tab]
           "alt-j c c"     [:clear-console]
           "alt-j c s"     [:toggle-console]
           "alt-j alt-c t" [:console-tab]
           "alt-j alt-c c" [:clear-console]
           "alt-j alt-c s" [:toggle-console]

           "alt-j t n" [:tabset.new]
           "alt-j t f" [:tabset]
           "alt-j t c" [:tabset.close]
           "ctrl-shift-p" [:tabs.move-prev-tabset]
           "ctrl-shift-n" [:tabs.move-next-tabset]

           "alt-j b"   [:add-browser-tab]
           "alt-j f n" [:new-file]

           "ctrl-c ctrl-r" [:behaviors.reload :keymaps.reload]
           }
     :editor.keys.hinting.active {
                                  "enter" [:auto-complete]
                                  }
     :editor.keys.normal {
                          "ctrl-shift-g" [:clear-inline-results
                                          :auto-complete.remove
                                          :editor.selection.clear
                                          (:emacs.keymap-cmd "Ctrl-G")]

                          ;; Override emacs plugin's bindings
                          "ctrl-a"    [:editor.line-start-smart]
                          "alt-space" [:paredit.select.parent]
                          }

     :editor {
              ;; Watchers
              "alt-shift-w" [:editor.watch.watch-selection]
              "alt-shift-u" [:editor.watch.unwatch]

              ;; Build-in
              "ctrl-."         [:editor.jump-to-definition-at-cursor]
              "ctrl-,"         [:editor.unjump]
              "ctrl-shift-d"   [:docs.search.show]
              "ctrl-h"         [:editor.doc.toggle]
              "ctrl-x enter"   [:eval-editor]

              ;; Paredit
              "alt-s"            [:paredit.unwrap.parent]
              "ctrl-right"       [:paredit.grow.right]
              "ctrl-left"        [:paredit.grow.left]
              "ctrl-shift-left"  [:paredit.shrink.right]
              "ctrl-shift-right" [:paredit.shrink.left]

              ;; Powerpack
              "alt-left"    [:lt.plugins.lt-powerpack/smart-backward]
              "alt-right"   [:lt.plugins.lt-powerpack/smart-forward]
              "alt-j g"     [:lt.plugins.lt-powerpack/google]
              "alt-z"       [:lt.plugins.lt-powerpack/zip-to-char]
              "alt-q"       [:lt.plugins.lt-powerpack/shell-command]
              "alt-t"       [:lt.plugins.lt-powerpack/transpose-words]
              "alt-shift-z" [:lt.plugins.lt-powerpack/jump-to-char]
              "ctrl-l"      [:lt.plugins.lt-powerpack/center-line]
              "alt-i"       [(:lt.plugins.lt-powerpack/insert-text "  ")]
              "ctrl-i"      [(:lt.plugins.lt-powerpack/insert-text "  ")]
              "alt-j alt-j" [:lt.plugins.lt-powerpack/join-lines]
              "alt-shift-k" [:lt.plugins.lt-powerpack/remove-line]
              "alt-shift-l" [:lt.plugins.lt-powerpack/duplicate-line]
              "alt-shift-p" [:lt.plugins.lt-powerpack/move-lines-up]
              "alt-shift-n" [:lt.plugins.lt-powerpack/move-lines-down]

              ;; Custom
              "alt-j space" [(:emacs.keymap-cmd "Alt-Space")]
     }
 }}
